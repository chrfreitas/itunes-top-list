{"version":3,"sources":["routes/routes.js","components/menu/menu.js","services/api/itunes.js","views/top-albums/top-albums.js","views/top-songs/top-songs.js","App.js","reportWebVitals.js","index.js"],"names":["routes","topAlbums","topSongs","Menu","className","to","BASE_URL","process","REACT_APP_ITUNES_API","CACHE","iTunesAPI","getAlbums","a","limit","url","axios","get","response","data","feed","entry","getSongs","TopAlbums","useState","albums","setAlbums","useEffect","renderAlbums","map","album","src","label","alt","id","attributes","TopSongs","songs","setSongs","renderSongs","Sentry","dsn","integrations","Integrations","BrowserTracing","tracesSampleRate","App","StrictMode","path","exact","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.555ef8ff.chunk.js","sourcesContent":["const routes = {\n    topAlbums: '/top-albums',\n    topSongs: '/top-songs'\n}\n\nexport default routes;","import { Link } from \"react-router-dom\";\n\nimport routes from \"../../routes/routes\";\nimport './menu.css'\n\nconst Menu = () => {\n    return (\n        <div className=\"menu\">\n            <Link className=\"menu__item\" to={routes.topAlbums}>Top 100 Albums</Link>\n            <Link className=\"menu__item\" to={routes.topSongs}>Top 100 Songs</Link>\n        </div>\n    )\n};\n\nexport default Menu;","import axios from \"axios\";\n\nconst BASE_URL = process.env.REACT_APP_ITUNES_API;\nconst CACHE = [];\n\nconst iTunesAPI = {\n    getAlbums: async (limit = 100) => {\n        const url = `${BASE_URL}/topalbums/limit=${limit}/json`;\n        if(CACHE[url]) {\n            return CACHE[url];\n        }\n\n        const response = await axios.get(url);\n        CACHE[url] = response.data.feed.entry;\n        return response.data.feed.entry;\n    },\n    getSongs: async (limit = 100) => {\n        const url = `${BASE_URL}/topsongs/limit=${limit}/json`;\n        if(CACHE[url]) {\n            return CACHE[url];\n        }\n\n        const response = await axios.get(url);\n        CACHE[url] = response.data.feed.entry;\n        return response.data.feed.entry;\n    }\n}\n\nexport default iTunesAPI;","import { useEffect, useState } from \"react\";\nimport iTunesAPI from \"../../services/api/itunes\";\n\nimport \"./top-albums.css\";\n\n\n\nfunction TopAlbums() {\n  const [albums, setAlbums] = useState([]);\n\n  useEffect(() => {\n  async function renderAlbums() {\n    const albums = await iTunesAPI.getAlbums();\n    setAlbums(albums);\n  }\n\n  renderAlbums();\n  }, [])\n\n  return (\n    <div className=\"top-albums\">\n      <h3 className=\"top-albums__title\">Top Albums</h3>\n      <div className=\"top-albums__list\">\n        {albums.map(album => \n          <div key={album.id.attributes['im:id']}>\n            <img className=\"top-albums__cover\" src={album['im:image'][2].label} alt=\"Album Cover\" />\n            <div className=\"top-albums__name\">{album['im:name'].label}</div>\n            <div className=\"top-albums__author\">{album['im:artist'].label}</div>\n          </div>)}\n      </div>\n    </div>\n  );\n}\n\nexport default TopAlbums;\n","import { useEffect, useState } from \"react\";\nimport iTunesAPI from \"../../services/api/itunes\";\n\nimport \"./top-songs.css\";\n\nfunction TopSongs() {\n  const [songs, setSongs] = useState([]);\n\n  useEffect(() => {\n    async function renderSongs() {\n      const songs = await iTunesAPI.getSongs();\n      setSongs(songs);\n    }\n\n    renderSongs();\n  }, [])\n\n  return (\n    <div className=\"top-songs\">\n      <h3 className=\"top-songs__title\">Top Songs</h3>\n      <div className=\"top-songs__list\">\n        {songs.map(album => \n          <div key={album.id.attributes['im:id']}>\n            <img className=\"top-songs__cover\" src={album['im:image'][2].label} alt=\"Song Cover\" />\n            <div className=\"top-songs__name\">{album['im:name'].label}</div>\n            <div className=\"top-songs__author\">{album['im:artist'].label}</div>\n          </div>)}\n      </div>\n    </div>\n  );\n}\n\nexport default TopSongs;\n","import React from 'react';\nimport { BrowserRouter as Router, Switch, Route, Redirect } from 'react-router-dom';\nimport * as Sentry from '@sentry/react';\nimport { Integrations } from \"@sentry/tracing\";\n\nimport Menu from './components/menu/menu';\nimport TopAlbums from './views/top-albums/top-albums';\nimport TopSongs from './views/top-songs/top-songs';\nimport routes from './routes/routes';\n\nSentry.init({\n    dsn: \"https://9e2c7453a34f4b09a34debab45b2be2b@o258723.ingest.sentry.io/5681554\",\n    integrations: [new Integrations.BrowserTracing()],\n    tracesSampleRate: 1.0,\n});\n\nexport const App = () => (\n    <Router>\n        <React.StrictMode>\n            <Menu />\n            <Switch>\n            <Route path={routes.topAlbums}>\n                <TopAlbums />\n            </Route>\n            <Route path={routes.topSongs}>\n                <TopSongs />\n            </Route>\n            <Route exact path=\"/\">\n                <Redirect to={routes.topAlbums} />\n            </Route>\n            </Switch>\n        </React.StrictMode>\n    </Router>\n)\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { App } from './App';\nimport reportWebVitals from './reportWebVitals';\nimport './index.css';\n\n\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}